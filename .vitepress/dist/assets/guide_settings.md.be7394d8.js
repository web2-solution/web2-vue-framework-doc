import{o as n,c as s,a}from"./app.4ba3de9e.js";const e='{"title":"프로젝트 설정 항목","description":"","frontmatter":{},"headers":[{"level":2,"title":"환경 변수 설정","slug":"환경-변수-설정"},{"level":3,"title":"설정 항목 설명","slug":"설정-항목-설명"},{"level":3,"title":".env.base","slug":"env-base"},{"level":3,"title":".env.dev","slug":"env-dev"},{"level":3,"title":".env.test","slug":"env-test"},{"level":3,"title":".env.pro","slug":"env-pro"},{"level":2,"title":"프로젝트 및 테마 설정","slug":"프로젝트-및-테마-설정"},{"level":3,"title":"설정 파일 경로","slug":"설정-파일-경로"},{"level":3,"title":"설명","slug":"설명"},{"level":3,"title":"새 속성 추가하기","slug":"새-속성-추가하기"},{"level":2,"title":"다국어 설정","slug":"다국어-설정"},{"level":2,"title":"스타일 구성","slug":"스타일-구성"},{"level":3,"title":"css 접두사 설정","slug":"css-접두사-설정"},{"level":3,"title":"접두사 사용","slug":"접두사-사용"}],"relativePath":"guide/settings.md","lastUpdated":1722835573437}',p={},o=a('<h1 id="프로젝트-설정-항목"><a class="header-anchor" href="#프로젝트-설정-항목" aria-hidden="true">#</a> 프로젝트 설정 항목</h1><p>본 문서에서는 개발자가 요구 사항에 맞게 설정할 수 있도록 몇 가지 일반적인 프로젝트 설정을 소개합니다.</p><h2 id="환경-변수-설정"><a class="header-anchor" href="#환경-변수-설정" aria-hidden="true">#</a> 환경 변수 설정</h2><p>프로젝트의 환경 변수 설정은 프로젝트 루트 디렉토리에 위치해 있으며, 여기서는 네 가지 환경 변수를 주로 설정합니다:</p><ul><li><a href="https://github.com/web2-solution/web2-vue-framework/blob/demo/.env.base" target="_blank" rel="noopener noreferrer">로컬 개발 환경</a></li><li><a href="https://github.com/web2-solution/web2-vue-framework/blob/demo/.env.dev" target="_blank" rel="noopener noreferrer">개발 환경</a></li><li><a href="https://github.com/web2-solution/web2-vue-framework/blob/demo/.env.test" target="_blank" rel="noopener noreferrer">테스트 환경</a></li><li><a href="https://github.com/web2-solution/web2-vue-framework/blob/demo/.env.pro" target="_blank" rel="noopener noreferrer">생산 환경</a></li></ul><p>개발 및 디버깅 중에는 <code>.env.base</code> 파일의 데이터를 읽습니다. 다른 환경에서도 마찬가지로, 빌드 명령에 따라 다른 환경 변수를 읽습니다.</p><p>여러 환경 변수가 있는 이유</p><p>예를 들어, <code>생산 환경</code>을 살펴보면, <code>pnpm run build:pro</code> 명령을 실행할 때 출력되는 패키지는 온라인 환경에서 사용됩니다. 따라서 코드가 압축되어야 하며, 코드에서 <code>console.log</code>와 <code>debugger</code>를 제거하여 빌드 후 코드의 깔끔함을 보장해야 합니다. 다른 환경에서는 <code>console.log</code>와 <code>debugger</code>를 유지하여 디버깅을 용이하게 하고 문제를 빠르게 찾을 수 있도록 해야 합니다.</p><p>따라서 환경 변수의 역할은 각기 다른 환경에서 다른 동작을 하도록 하는 것입니다.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><code>VITE_</code>로 시작하는 변수만 프로젝트에 포함됩니다. 이러한 변수는 프로젝트 코드에서 다음과 같이 접근할 수 있습니다:</li></ul><div class="language-js"><pre><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VITE_APP_TITLE</span><span class="token punctuation">)</span>\n</code></pre></div></div><h3 id="설정-항목-설명"><a class="header-anchor" href="#설정-항목-설명" aria-hidden="true">#</a> 설정 항목 설명</h3><h3 id="env-base"><a class="header-anchor" href="#env-base" aria-hidden="true">#</a> .env.base</h3><p>로컬 개발 환경 적용</p><div class="language-bash"><pre><code><span class="token comment"># 환경</span>\nNODE_ENV <span class="token operator">=</span> development\n\n<span class="token comment"># 인터페이스 접두사</span>\nVITE_API_BASEPATH <span class="token operator">=</span> base\n\n<span class="token comment"># 빌드 경로</span>\nVITE_BASE_PATH <span class="token operator">=</span> /\n\n<span class="token comment"># 제목</span>\nVITE_APP_TITLE <span class="token operator">=</span> ElementAdmin\n</code></pre></div><h3 id="env-dev"><a class="header-anchor" href="#env-dev" aria-hidden="true">#</a> .env.dev</h3><p>개발 환경 적용</p><div class="language-bash"><pre><code><span class="token comment"># 환경</span>\nNODE_ENV <span class="token operator">=</span> production\n\n<span class="token comment"># 인터페이스 접두사</span>\nVITE_API_BASEPATH <span class="token operator">=</span> dev\n\n<span class="token comment"># 빌드 경로</span>\nVITE_BASE_PATH <span class="token operator">=</span> /dist-dev/\n\n<span class="token comment"># debugger 삭제 여부</span>\nVITE_DROP_DEBUGGER <span class="token operator">=</span> <span class="token boolean">false</span>\n\n<span class="token comment"># console.log 삭제 여부</span>\nVITE_DROP_CONSOLE <span class="token operator">=</span> <span class="token boolean">false</span>\n\n<span class="token comment"># sourcemap 삭제 여부</span>\nVITE_SOURCEMAP <span class="token operator">=</span> <span class="token boolean">true</span>\n\n<span class="token comment"># 출력 경로</span>\nVITE_OUT_DIR <span class="token operator">=</span> dist-dev\n\n<span class="token comment"># 제목</span>\nVITE_APP_TITLE <span class="token operator">=</span> ElementAdmin\n\n</code></pre></div><h3 id="env-test"><a class="header-anchor" href="#env-test" aria-hidden="true">#</a> .env.test</h3><p>테스트 환경 적용</p><div class="language-bash"><pre><code><span class="token comment"># 환경</span>\nNODE_ENV <span class="token operator">=</span> production\n\n<span class="token comment"># 인터페이스 접두사</span>\nVITE_API_BASEPATH <span class="token operator">=</span> <span class="token builtin class-name">test</span>\n\n<span class="token comment"># 빌드 경로</span>\nVITE_BASE_PATH <span class="token operator">=</span> /dist-test/\n\n<span class="token comment"># debugger 삭제 여부</span>\nVITE_DROP_DEBUGGER <span class="token operator">=</span> <span class="token boolean">false</span>\n\n<span class="token comment"># console.log 삭제 여부</span>\nVITE_DROP_CONSOLE <span class="token operator">=</span> <span class="token boolean">false</span>\n\n<span class="token comment"># sourcemap 생성 여부</span>\nVITE_SOURCEMAP <span class="token operator">=</span> <span class="token boolean">true</span>\n\n<span class="token comment"># 출력 경로</span>\nVITE_OUT_DIR <span class="token operator">=</span> dist-test\n\n</code></pre></div><h3 id="env-pro"><a class="header-anchor" href="#env-pro" aria-hidden="true">#</a> .env.pro</h3><p>생산 환경 적용</p><div class="language-bash"><pre><code><span class="token comment"># 환경</span>\nNODE_ENV <span class="token operator">=</span> production\n\n<span class="token comment"># 인터페이스 접두사</span>\nVITE_API_BASEPATH <span class="token operator">=</span> pro\n\n<span class="token comment"># 빌드 경로</span>\nVITE_BASE_PATH <span class="token operator">=</span> /\n\n<span class="token comment"># debugger 삭제 여부</span>\nVITE_DROP_DEBUGGER <span class="token operator">=</span> <span class="token boolean">true</span>\n\n<span class="token comment"># console.log 삭제 여부</span>\nVITE_DROP_CONSOLE <span class="token operator">=</span> <span class="token boolean">true</span>\n\n<span class="token comment"># sourcemap 생성 여부</span>\nVITE_SOURCEMAP <span class="token operator">=</span> <span class="token boolean">false</span>\n\n<span class="token comment"># 출력 경로</span>\nVITE_OUT_DIR <span class="token operator">=</span> dist-pro\n\n<span class="token comment"># 제목</span>\nVITE_APP_TITLE <span class="token operator">=</span> ElementAdmin\n\n</code></pre></div><h2 id="프로젝트-및-테마-설정"><a class="header-anchor" href="#프로젝트-및-테마-설정" aria-hidden="true">#</a> 프로젝트 및 테마 설정</h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>프로젝트 설정 파일은 프로젝트 내에서 표시되는 콘텐츠, 레이아웃, 테마 색상 등의 효과를 구성하는 데 사용됩니다.</p></div><h3 id="설정-파일-경로"><a class="header-anchor" href="#설정-파일-경로" aria-hidden="true">#</a> 설정 파일 경로</h3><p><a href="https://github.com/web2-solution/web2-vue-framework/blob/demo/src/store/modules/app.ts" target="_blank" rel="noopener noreferrer">src/store/modules/app.ts</a></p><h3 id="설명"><a class="header-anchor" href="#설명" aria-hidden="true">#</a> 설명</h3><p>수정 후, 전역 상태 관리에 추가되어 다른 곳에서 쉽게 사용할 수 있습니다.</p><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> appModules<span class="token operator">:</span> AppState <span class="token operator">=</span> <span class="token punctuation">{</span>\n  sizeMap<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;default&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;large&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;small&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  mobile<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 이동 단말 여부</span>\n  title<span class="token operator">:</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VITE_APP_TITLE</span> <span class="token keyword">as</span> string<span class="token punctuation">,</span> <span class="token comment">// 제목</span>\n  pageLoading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 라우팅 전환 시 로딩</span>\n\n  breadcrumb<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 브레드크럼 표시</span>\n  breadcrumbIcon<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 브레드크럼 아이콘 표시</span>\n  collapse<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 메뉴 접기</span>\n  hamburger<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 메뉴 접기 아이콘 표시</span>\n  screenfull<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 전체 화면 아이콘 표시</span>\n  size<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 크기 아이콘 표시</span>\n  locale<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 다국어 아이콘 표시</span>\n  tagsView<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 태그 페이지 표시</span>\n  logo<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 로고 표시</span>\n  fixedHeader<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 헤더 고정</span>\n  footer<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 페이지 하단 표시</span>\n  greyMode<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 회색 모드 활성화 여부, 특별한 추모일에 사용</span>\n\n  layout<span class="token operator">:</span> wsCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;layout&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;classic&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 레이아웃 설정</span>\n  isDark<span class="token operator">:</span> wsCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;isDark&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 다크 모드 여부</span>\n  currentSize<span class="token operator">:</span> wsCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;default&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;default&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 컴포넌트 크기</span>\n  theme<span class="token operator">:</span> wsCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;theme&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 테마 색상</span>\n    elColorPrimary<span class="token operator">:</span> <span class="token string">&#39;#409eff&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 좌측 메뉴 테두리 색상</span>\n    leftMenuBorderColor<span class="token operator">:</span> <span class="token string">&#39;inherit&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 좌측 메뉴 배경 색상</span>\n    leftMenuBgColor<span class="token operator">:</span> <span class="token string">&#39;#001529&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 좌측 메뉴 밝은 배경 색상</span>\n    leftMenuBgLightColor<span class="token operator">:</span> <span class="token string">&#39;#0f2438&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 좌측 메뉴 선택 배경 색상</span>\n    leftMenuBgActiveColor<span class="token operator">:</span> <span class="token string">&#39;var(--el-color-primary)&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 좌측 메뉴 접힌 상태의 선택 배경 색상</span>\n    leftMenuCollapseBgActiveColor<span class="token operator">:</span> <span class="token string">&#39;var(--el-color-primary)&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 좌측 메뉴 글자 색상</span>\n    leftMenuTextColor<span class="token operator">:</span> <span class="token string">&#39;#bfcbd9&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 좌측 메뉴 선택 글자 색상</span>\n    leftMenuTextActiveColor<span class="token operator">:</span> <span class="token string">&#39;#fff&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 로고 글자 색상</span>\n    logoTitleTextColor<span class="token operator">:</span> <span class="token string">&#39;#fff&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 로고 테두리 색상</span>\n    logoBorderColor<span class="token operator">:</span> <span class="token string">&#39;inherit&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 상단 헤더 배경 색상</span>\n    topHeaderBgColor<span class="token operator">:</span> <span class="token string">&#39;#fff&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 상단 헤더 글자 색상</span>\n    topHeaderTextColor<span class="token operator">:</span> <span class="token string">&#39;inherit&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 상단 헤더 호버 색상</span>\n    topHeaderHoverColor<span class="token operator">:</span> <span class="token string">&#39;#f6f6f6&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 상단 툴 테두리 색상</span>\n    topToolBorderColor<span class="token operator">:</span> <span class="token string">&#39;#eee&#39;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="새-속성-추가하기"><a class="header-anchor" href="#새-속성-추가하기" aria-hidden="true">#</a> 새 속성 추가하기</h3><p>새로운 전역 구성 속성을 추가하려면, <a href="https://github.com/web2-solution/web2-vue-framework/blob/demo/src/store/modules/app.ts" target="_blank" rel="noopener noreferrer">src/store/modules/app.ts</a>파일의 AppState에서 해당 타입을 추가하고, appModules 객체에 새 속성의 기본값을 부여해야 합니다.</p><h2 id="다국어-설정"><a class="header-anchor" href="#다국어-설정" aria-hidden="true">#</a> 다국어 설정</h2><p>다국어 정보를 구성하는 데 사용됩니다</p><p><a href="https://github.com/web2-solution/web2-vue-framework/blob/demo/src/store/modules/locale.ts" target="_blank" rel="noopener noreferrer">src/store/modules/locale.ts</a> 파일에서 구성</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useCache <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/web/useCache&#39;</span>\n<span class="token keyword">import</span> zhCn <span class="token keyword">from</span> <span class="token string">&#39;element-plus/lib/locale/lang/zh-cn&#39;</span>\n<span class="token keyword">import</span> en <span class="token keyword">from</span> <span class="token string">&#39;element-plus/lib/locale/lang/en&#39;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> wsCache <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> elLocaleMap <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token string">&#39;zh-CN&#39;</span><span class="token operator">:</span> zhCn<span class="token punctuation">,</span>\n  en<span class="token operator">:</span> en\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">LocaleState</span> <span class="token punctuation">{</span>\n  currentLocale<span class="token operator">:</span> LocaleDropdownType\n  localeMap<span class="token operator">:</span> LocaleDropdownType<span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> localeModules<span class="token operator">:</span> LocaleState <span class="token operator">=</span> <span class="token punctuation">{</span>\n  currentLocale<span class="token operator">:</span> <span class="token punctuation">{</span>\n    lang<span class="token operator">:</span> wsCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;lang&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;zh-CN&#39;</span><span class="token punctuation">,</span>\n    elLocale<span class="token operator">:</span> elLocaleMap<span class="token punctuation">[</span>wsCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;lang&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;zh-CN&#39;</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 다국어</span>\n  localeMap<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      lang<span class="token operator">:</span> <span class="token string">&#39;zh-CN&#39;</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">&#39;简体中文&#39;</span><span class="token comment">//간체 중국어</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      lang<span class="token operator">:</span> <span class="token string">&#39;en&#39;</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">&#39;English&#39;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n\n</code></pre></div><h2 id="스타일-구성"><a class="header-anchor" href="#스타일-구성" aria-hidden="true">#</a> 스타일 구성</h2><h3 id="css-접두사-설정"><a class="header-anchor" href="#css-접두사-설정" aria-hidden="true">#</a> css 접두사 설정</h3><p>컴포넌트 및 <code>element-plus</code> 컴포넌트의 <code>class</code> 접두사 수정에 사용됩니다.</p><p>현재 <code>element-plus</code>의 컴포넌트가 모두 동적 접두사를 채택하지 않으므로, 현재는 <code>el</code> 접두사를 사용하고 있습니다.。</p><ul><li><a href="https://github.com/web2-solution/web2-vue-framework/blob/demo/src/styles/variables.module.less" target="_blank" rel="noopener noreferrer">src/styles/variables.module.less</a> 파일에서 구성</li></ul><div class="language-less"><pre><code><span class="token comment">// 네임스페이스</span>\n<span class="token variable">@namespace<span class="token punctuation">:</span></span> v<span class="token punctuation">;</span>\n<span class="token comment">// el 네임스페이스</span>\n<span class="token variable">@elNamespace<span class="token punctuation">:</span></span> el<span class="token punctuation">;</span>\n\n<span class="token comment">// 변수 내보내기</span>\n<span class="token selector">:export</span> <span class="token punctuation">{</span>\n  <span class="token property">namespace</span><span class="token punctuation">:</span> <span class="token variable">@namespace</span><span class="token punctuation">;</span>\n  <span class="token property">elNamespace</span><span class="token punctuation">:</span> <span class="token variable">@elNamespace</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre></div><h3 id="접두사-사용"><a class="header-anchor" href="#접두사-사용" aria-hidden="true">#</a> 접두사 사용</h3><p><strong>CSS 내에서</strong></p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>less<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n  <span class="token comment">/* namespace가 이미 전역적으로 주입되었으므로 추가로 import할 필요 없음 */</span>\n  <span class="token atrule"><span class="token rule">@prefix-cls</span><span class="token punctuation">:</span> ~&#39;@</span><span class="token punctuation">{</span>namespace<span class="token punctuation">}</span>-app&#39;<span class="token punctuation">;</span>\n\n  <span class="token selector">.@</span><span class="token punctuation">{</span>prefix-cls<span class="token punctuation">}</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p><strong>Vue / TypeScript 내에서</strong></p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useDesign <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/hooks/web/useDesign&#39;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> prefixCls <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useDesign</span><span class="token punctuation">(</span><span class="token string">&#39;app&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// prefixCls =&gt; v-app</span>\n</code></pre></div>',47);p.render=function(a,e,p,t,c,l){return n(),s("div",null,[o])};export default p;export{e as __pageData};
