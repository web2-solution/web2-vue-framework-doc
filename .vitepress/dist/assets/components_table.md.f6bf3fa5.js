import{o as n,c as a,b as s,a as t}from"./app.4ba3de9e.js";const p='{"title":"Table 테이블 컴포넌트","description":"","frontmatter":{},"headers":[{"level":2,"title":"사용법","slug":"사용법"},{"level":3,"title":"기본 사용법","slug":"기본-사용법"},{"level":3,"title":"useTable","slug":"usetable"},{"level":2,"title":"Table 속성","slug":"table-속성"},{"level":3,"title":"Columns","slug":"columns"},{"level":3,"title":"Pagination","slug":"pagination"},{"level":2,"title":"Table 함수","slug":"table-함수"}],"relativePath":"components/table.md","lastUpdated":1722835573430}',o={},e=t('<h1 id="table-테이블-컴포넌트"><a class="header-anchor" href="#table-테이블-컴포넌트" aria-hidden="true">#</a> Table 테이블 컴포넌트</h1><p><code>element-plus</code>의 <code>Table</code> 컴포넌트를 래핑하여 <code>columns</code>와 <code>data</code> 매개변수만 전달하면 응답하는 테이블을 렌더링할 수 있습니다.</p><p>Table 컴포넌트 : <a href="https://github.com/web2-solution/web2-vue-framework/tree/demo/src/components/Table" target="_blank" rel="noopener noreferrer">src/components/Table</a></p><div class="warning custom-block"><p class="custom-block-title">주의</p><p>Table 컴포넌트를 사용할 때는 tsx를 사용하는 것이 좋습니다.</p></div><h2 id="사용법"><a class="header-anchor" href="#사용법" aria-hidden="true">#</a> 사용법</h2><h3 id="기본-사용법"><a class="header-anchor" href="#기본-사용법" aria-hidden="true">#</a> 기본 사용법</h3><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> TableColumn <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/components/Table&#39;</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> reactive<span class="token operator">&lt;</span>TableColumn<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    field<span class="token operator">:</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span>\n    label<span class="token operator">:</span> <span class="token string">&#39;title&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    field<span class="token operator">:</span> <span class="token string">&#39;author&#39;</span><span class="token punctuation">,</span>\n    label<span class="token operator">:</span> <span class="token string">&#39;author&#39;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;title1&#39;</span><span class="token punctuation">,</span>\n    author<span class="token operator">:</span> <span class="token string">&#39;author1&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;title2&#39;</span><span class="token punctuation">,</span>\n    author<span class="token operator">:</span> <span class="token string">&#39;author2&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;title3&#39;</span><span class="token punctuation">,</span>\n    author<span class="token operator">:</span> <span class="token string">&#39;author3&#39;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span> <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>data<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre></div><h3 id="usetable"><a class="header-anchor" href="#usetable" aria-hidden="true">#</a> useTable</h3><p>element-plus의 Table 컴포넌트를 사용할 때 <code>useTable</code> 훅을 함께 사용하는 것이 유용합니다.</p>',9),c=t('<div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tsx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ContentWrap <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/components/ContentWrap&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useI18n <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/web/useI18n&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> TableColumn<span class="token punctuation">,</span> TableSlotDefault <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/components/Table&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> getTreeTableListApi <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/api/table&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> unref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ElTag<span class="token punctuation">,</span> ElButton <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useTable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/web/useTable&#39;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> tableRegister<span class="token punctuation">,</span> tableState <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useTable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function-variable function">fetchDataApi</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> currentPage<span class="token punctuation">,</span> pageSize <span class="token punctuation">}</span> <span class="token operator">=</span> tableState\n    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getTreeTableListApi</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      pageIndex<span class="token operator">:</span> <span class="token function">unref</span><span class="token punctuation">(</span>currentPage<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      pageSize<span class="token operator">:</span> <span class="token function">unref</span><span class="token punctuation">(</span>pageSize<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      list<span class="token operator">:</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>list<span class="token punctuation">,</span>\n      total<span class="token operator">:</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>total\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> loading<span class="token punctuation">,</span> dataList<span class="token punctuation">,</span> total<span class="token punctuation">,</span> currentPage<span class="token punctuation">,</span> pageSize <span class="token punctuation">}</span> <span class="token operator">=</span> tableState\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> t <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useI18n</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> columns <span class="token operator">=</span> reactive<span class="token operator">&lt;</span>TableColumn<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    field<span class="token operator">:</span> <span class="token string">&#39;selection&#39;</span><span class="token punctuation">,</span>\n    type<span class="token operator">:</span> <span class="token string">&#39;selection&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    field<span class="token operator">:</span> <span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span>\n    label<span class="token operator">:</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;tableDemo.index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    type<span class="token operator">:</span> <span class="token string">&#39;index&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    field<span class="token operator">:</span> <span class="token string">&#39;content&#39;</span><span class="token punctuation">,</span>\n    label<span class="token operator">:</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;tableDemo.header&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    children<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        field<span class="token operator">:</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span>\n        label<span class="token operator">:</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;tableDemo.title&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        field<span class="token operator">:</span> <span class="token string">&#39;author&#39;</span><span class="token punctuation">,</span>\n        label<span class="token operator">:</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;tableDemo.author&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        field<span class="token operator">:</span> <span class="token string">&#39;display_time&#39;</span><span class="token punctuation">,</span>\n        label<span class="token operator">:</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;tableDemo.displayTime&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        field<span class="token operator">:</span> <span class="token string">&#39;importance&#39;</span><span class="token punctuation">,</span>\n        label<span class="token operator">:</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;tableDemo.importance&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">formatter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token operator">:</span> Recordable<span class="token punctuation">,</span> __<span class="token operator">:</span> TableColumn<span class="token punctuation">,</span> cellValue<span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n          <span class="token keyword">return</span> <span class="token punctuation">(</span>\n            <span class="token operator">&lt;</span>ElTag type<span class="token operator">=</span><span class="token punctuation">{</span>cellValue <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&#39;success&#39;</span> <span class="token operator">:</span> cellValue <span class="token operator">===</span> <span class="token number">2</span> <span class="token operator">?</span> <span class="token string">&#39;warning&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;danger&#39;</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>\n              <span class="token punctuation">{</span>cellValue <span class="token operator">===</span> <span class="token number">1</span>\n                <span class="token operator">?</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;tableDemo.important&#39;</span><span class="token punctuation">)</span>\n                <span class="token operator">:</span> cellValue <span class="token operator">===</span> <span class="token number">2</span>\n                <span class="token operator">?</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;tableDemo.good&#39;</span><span class="token punctuation">)</span>\n                <span class="token operator">:</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;tableDemo.commonly&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n            <span class="token operator">&lt;</span><span class="token operator">/</span>ElTag<span class="token operator">&gt;</span>\n          <span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        field<span class="token operator">:</span> <span class="token string">&#39;pageviews&#39;</span><span class="token punctuation">,</span>\n        label<span class="token operator">:</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;tableDemo.pageviews&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    field<span class="token operator">:</span> <span class="token string">&#39;action&#39;</span><span class="token punctuation">,</span>\n    label<span class="token operator">:</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;tableDemo.action&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    slots<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span>\n          <span class="token operator">&lt;</span>ElButton type<span class="token operator">=</span><span class="token string">&quot;primary&quot;</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">actionFn</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>\n            <span class="token punctuation">{</span><span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;tableDemo.action&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n          <span class="token operator">&lt;</span><span class="token operator">/</span>ElButton<span class="token operator">&gt;</span>\n        <span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">actionFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data<span class="token operator">:</span> TableSlotDefault</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentWrap</span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>`${t(<span class="token punctuation">&#39;</span>router.treeTable<span class="token punctuation">&#39;</span>)} ${t(<span class="token punctuation">&#39;</span>tableDemo.example<span class="token punctuation">&#39;</span>)}`<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span>\n      <span class="token attr-name"><span class="token namespace">v-model:</span>pageSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pageSize<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name"><span class="token namespace">v-model:</span>currentPage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>currentPage<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataList<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">row-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">:loading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>loading<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">sortable</span>\n      <span class="token attr-name">:pagination</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{\n        total: total\n      }<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">@register</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tableRegister<span class="token punctuation">&quot;</span></span>\n    <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentWrap</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span>\n    <span class="token attr-name"><span class="token namespace">v-model:</span>pageSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tableObject.pageSize<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name"><span class="token namespace">v-model:</span>currentPage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tableObject.currentPage<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tableObject.tableList<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:loading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tableObject.loading<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:pagination</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{\n      total: tableObject.total\n    }<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">@register</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>register<span class="token punctuation">&quot;</span></span>\n  <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre></div><h4 id="파라미터-정의"><a class="header-anchor" href="#파라미터-정의" aria-hidden="true">#</a> 파라미터 정의</h4><div class="language-ts"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> tableRegister<span class="token punctuation">,</span> tableState<span class="token punctuation">,</span> tableMethods <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useTable</span><span class="token punctuation">(</span>props<span class="token operator">:</span> UseTableConfig<span class="token punctuation">)</span>\n</code></pre></div><p><strong>props</strong></p><p><code>useTable</code>을 사용할 때는 <code>fetchDataApi</code>를 전달해야 합니다. 커스터마이징을 보장하기 위해, 요청 로직을 <code>fetchDataApi</code>에서 직접 구현하고, 결과로 { list: Array, total?: number }를 반환해야 합니다. 이후 페이지네이션이 자동으로 데이터 요청을 처리합니다.</p><p>삭제가 필요한 경우, fetchDelApi도 전달해야 하며, 반환 값으로 Boolean을 제공하여 삭제 완료 여부를 판단합니다. 이후 useTable이 자동으로 테이블을 새로 고칩니다.</p><p><strong>tableRegister</strong></p><p><code>tableRegister</code>는 <code>useTable</code>을 등록하는 데 사용됩니다. <code>useTable</code>이 제공하는 <code>api</code>를 사용하려면, 반드시 <code>tableRegister</code>를 컴포넌트의 <code>onRegister</code>에 전달해야 합니다.</p><p><strong>tableState</strong></p><p>테이블 상태</p><table><thead><tr><th>속성</th><th>설명</th><th>타입</th><th>선택 가능 값</th><th>기본값</th></tr></thead><tbody><tr><td>pageSize</td><td>페이지당 표시할 항목 수</td><td><code>number</code></td><td>-</td><td>10</td></tr><tr><td>currentPage</td><td>현재 페이지</td><td><code>number</code></td><td>-</td><td>1</td></tr><tr><td>total</td><td>총 항목 수</td><td><code>number</code></td><td>-</td><td>-</td></tr><tr><td>dataList</td><td>테이블 데이터</td><td><code>any[]</code></td><td>-</td><td>[]</td></tr><tr><td>loading</td><td>테이블 로딩 중 여부</td><td><code>boolean</code></td><td>-</td><td>false</td></tr></tbody></table><p><strong>tableMethods</strong></p><table><thead><tr><th>함수 명</th><th>설명</th><th>콜백 파라미터</th></tr></thead><tbody><tr><td>setProps</td><td>테이블 속성 설정</td><td>(props: Recordable) =&gt; void</td></tr><tr><td>getList</td><td>테이블 데이터 가져오기</td><td><code>() =&gt; Promise&lt;void&gt;</code></td></tr><tr><td>setColumn</td><td>테이블 헤더 구조 설정</td><td>(columnProps: TableSetProps[]) =&gt; void</td></tr><tr><td>addColumn</td><td>테이블 헤더 구조 추가</td><td>(tableColumn: TableColumn, index?: number) =&gt; void</td></tr><tr><td>delColumn</td><td>테이블 헤더 구조 삭제</td><td>(field: string) =&gt; void</td></tr><tr><td>getElTableExpose</td><td>ElTable 인스턴스 가져오기</td><td><code>() =&gt; Promise&lt;typeof ElTable&gt;</code></td></tr><tr><td>refresh</td><td>테이블 새로고침</td><td>() =&gt; void</td></tr><tr><td>delList</td><td>데이터 삭제</td><td><code>(idsLength: number) =&gt; Promise&lt;void&gt;</code></td></tr></tbody></table><h2 id="table-속성"><a class="header-anchor" href="#table-속성" aria-hidden="true">#</a> Table 속성</h2><p>다음 파라미터 이외에, <code>element-plus</code> 의 <code>Table</code> 컴포넌트가 지원하는 모든 속성도 지원합니다，<a href="https://element-plus.org/zh-CN/component/table.html#table-attributes" target="_blank" rel="noopener noreferrer">자세히 보기</a></p><table><thead><tr><th>속성</th><th>설명</th><th>타입</th><th>선택 가능 값</th><th>기본값</th></tr></thead><tbody><tr><td>pageSize</td><td>페이지당 표시할 항목 수, v-model을 통한 양방향 바인딩 지원</td><td><code>number</code></td><td>-</td><td>10</td></tr><tr><td>currentPage</td><td>현재 페이지, v-model을 통한 양방향 바인딩 지원</td><td><code>number</code></td><td>-</td><td>1</td></tr><tr><td>selection</td><td>다중 선택 여부</td><td><code>boolean</code></td><td>-</td><td>true</td></tr><tr><td>showOverflowTooltip</td><td>화면 범위 넘어설 때의 숨김 여부, schema에서의 showOverflowTooltip 설정보다 우선 순위가 낮음</td><td><code>boolean</code></td><td>-</td><td>true</td></tr><tr><td>columns</td><td>테이블 헤더 구조 <a href="#Columns">자세히 보기</a></td><td><code>TableColumn[]</code></td><td>-</td><td>[]</td></tr><tr><td>expand</td><td>확장 행 표시 여부</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>pagination</td><td>페이지네이션 표시 여부, <a href="#Pagination">자세히 보기</a></td><td><code>Pagination</code>/<code>undefined</code></td><td>-</td><td>-</td></tr><tr><td>reserveSelection</td><td>type=selection의 열에만 적용됩니다. 유형은 Boolean이며, true로 설정하면 데이터 업데이트 후 이전에 선택된 데이터가 유지 됨(단, row-key를 지정해야 함)</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>loading</td><td>로딩 상태</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>reserveIndex</td><td>인덱스 중첩 여부</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>align</td><td>내용 정렬 방식</td><td><code>string</code></td><td><code>left</code>/<code>center</code>/<code>right</code></td><td>left</td></tr><tr><td>headerAlign</td><td>헤더 정렬 방식</td><td><code>string</code></td><td><code>left</code>/<code>center</code>/<code>right</code></td><td>left</td></tr><tr><td>data</td><td>테이블 데이터</td><td><code>Recordable[]</code></td><td>-</td><td>[]</td></tr><tr><td>showAction</td><td>테이블 조작 표시 여부</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>imagePreview</td><td>이미지를 표시해야 하는 필드</td><td><code>string[]</code></td><td>-</td><td>-</td></tr><tr><td>videoPreview</td><td>비디오를 표시해야 하는 필드</td><td><code>string[]</code></td><td>-</td><td>-</td></tr><tr><td>customContent</td><td>콘텐츠 사용자 정의 여부</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>cardBodyStyle</td><td>카드 내용 스타일</td><td><code>CSSProperties</code></td><td>-</td><td>-</td></tr><tr><td>cardBodyClass</td><td>카드 내용 클래스 이름</td><td><code>string</code></td><td>-</td><td>-</td></tr><tr><td>cardWrapStyle</td><td>카드 컨테이너 스타일</td><td><code>CSSProperties</code></td><td>-</td><td>-</td></tr><tr><td>cardWrapClass</td><td>카트 컨테이너 클래스 이름</td><td><code>string</code></td><td>-</td><td>-</td></tr></tbody></table><h3 id="columns"><a class="header-anchor" href="#columns" aria-hidden="true">#</a> Columns<span id="Columns"></span></h3><p>다음 속성 이외에, <code>element-plus</code>의 <code>TableColumn</code> 속성도 지원합니다.</p><table><thead><tr><th>속성</th><th>설명</th><th>타입</th><th>선택 가능 값</th><th>기본값</th></tr></thead><tbody><tr><td>field</td><td>고유 값. 올바른 데이터를 표시하려면 data 내의 속성명과 일치해야 합니다.</td><td><code>string</code></td><td>-</td><td>-</td></tr><tr><td>label</td><td>헤더 이름</td><td><code>string</code></td><td>-</td><td>-</td></tr><tr><td>hidden</td><td>숨김 여부</td><td><code>boolean</code></td><td>-</td><td>-</td></tr><tr><td>slots</td><td>슬롯 객체</td><td><code>object</code></td><td>-</td><td>-</td></tr><tr><td>children</td><td>하위 항목, 다중 계층 헤더에 사용됩니다</td><td><code>TableColumn[]</code></td><td>-</td><td>-</td></tr></tbody></table><h3 id="pagination"><a class="header-anchor" href="#pagination" aria-hidden="true">#</a> Pagination<span id="Pagination"></span></h3><p>element-plus의 Pagination에서 지원하는 모든 속성, <a href="https://element-plus.org/zh-CN/component/pagination.html#%E5%B1%9E%E6%80%A7" target="_blank" rel="noopener noreferrer">자세히 보기</a></p><h2 id="table-함수"><a class="header-anchor" href="#table-함수" aria-hidden="true">#</a> Table 함수</h2><table><thead><tr><th>함수명</th><th>설명</th><th>콜백 파라미터</th></tr></thead><tbody><tr><td>setProps</td><td>테이블 속성 설정</td><td>(props: Recordable) =&gt; void</td></tr><tr><td>setColumn</td><td>헤더 구조 수정</td><td>(columnProps: TableSetPropsType[]) =&gt; void</td></tr><tr><td>addColumn</td><td>헤더 구조 추가</td><td>(tableColumn: TableColumn, index?: number) =&gt; void</td></tr><tr><td>delColumn</td><td>헤더 구조 삭제</td><td>(field: string) =&gt; void</td></tr></tbody></table>',23);o.render=function(t,p,o,l,u,d){return n(),a("div",null,[e,s(" 복잡한 예제는 [온라인 미리보기](https://element-plus-admin.cn/#/components/table/use-table)를 참조하세요. "),c])};export default o;export{p as __pageData};
