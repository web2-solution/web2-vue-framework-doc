import{o as n,c as a,a as s}from"./app.4ba3de9e.js";const t='{"title":"Icon 아이콘 컴포넌트","description":"","frontmatter":{},"headers":[{"level":2,"title":"사용법","slug":"사용법"},{"level":3,"title":"기본 사용법","slug":"기본-사용법"},{"level":3,"title":"useIcon","slug":"useicon"},{"level":2,"title":"Icon 속성","slug":"icon-속성"}],"relativePath":"components/icon.md","lastUpdated":1722835573428}',o={},p=s('<h1 id="icon-아이콘-컴포넌트"><a class="header-anchor" href="#icon-아이콘-컴포넌트" aria-hidden="true">#</a> Icon 아이콘 컴포넌트</h1><p>프로젝트 내 컴포넌트 표시를 위해 사용되며, 기본적으로 모든 아이콘 라이브러리를 지원합니다 (필요에 따라 로드되며, 사용된 아이콘만 패키징됨). 로컬 SVG와 Iconify 아이콘 사용을 지원합니다.</p><p>Icon 컴포넌트 : <a href="https://github.com/web2-solution/web2-vue-framework/tree/demo/src/components/Icon" target="_blank" rel="noopener noreferrer">src/components/Icon</a></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Iconify에서 원하는 모든 아이콘을 검색하고 사용할 수 있습니다. 이 아이콘이 <code>element-plus</code> 아이콘 라이브러리 포함여부와는 상관없이 사용할 수 있습니다.</p></div><h2 id="사용법"><a class="header-anchor" href="#사용법" aria-hidden="true">#</a> 사용법</h2><h3 id="기본-사용법"><a class="header-anchor" href="#기본-사용법" aria-hidden="true">#</a> 기본 사용법</h3><p><code>svg-icon:</code>로 시작하는 경우, 로컬에서 해당 <code>SVG</code> 아이콘을 찾고, 그렇지 않으면 <code>Iconify</code> 아이콘을 로드합니다.</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!-- 로컬 svg --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>svg-icon:peoples<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n\n  <span class="token comment">&lt;!-- Iconify에서 불러오기 --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ep:aim<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre></div><h3 id="useicon"><a class="header-anchor" href="#useicon" aria-hidden="true">#</a> useIcon</h3><p>다른 컴포넌트, 예를 들어 <code>ElButton</code>에 <code>icon</code> 속성을 전달해야 하는 경우, <code>useIcon</code>을 사용할 수 있습니다.</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useIcon <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/web/useIcon&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ElButton <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span>\n\n<span class="token keyword">const</span> icon <span class="token operator">=</span> <span class="token function">useIcon</span><span class="token punctuation">(</span><span class="token punctuation">{</span> icon<span class="token operator">:</span> <span class="token string">&#39;svg-icon:save&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ElButton</span> <span class="token attr-name">:icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>icon<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> button <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ElButton</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h4 id="파라미터-소개"><a class="header-anchor" href="#파라미터-소개" aria-hidden="true">#</a> 파라미터 소개</h4><div class="language-ts"><pre><code><span class="token keyword">const</span> icon <span class="token operator">=</span> <span class="token function">useIcon</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>\n</code></pre></div><p><strong>props</strong></p><p><a href="#Icon">자세히 보기</a></p><h2 id="icon-속성"><a class="header-anchor" href="#icon-속성" aria-hidden="true">#</a> Icon 속성<span id="Icon"></span></h2><table><thead><tr><th>속성</th><th>설명</th><th>타입</th><th>선택 가능 값</th><th>기본값</th></tr></thead><tbody><tr><td>icon</td><td>아이콘 이름</td><td><code>string</code></td><td>-</td><td>-</td></tr><tr><td>color</td><td>아이콘 색상</td><td><code>string</code></td><td>-</td><td>-</td></tr><tr><td>size</td><td>아이콘 크기</td><td><code>number</code></td><td>-</td><td>16</td></tr><tr><td>hoverColor</td><td>hover 색상</td><td><code>string</code></td><td>-</td><td>-</td></tr></tbody></table>',17);o.render=function(s,t,o,e,c,l){return n(),a("div",null,[p])};export default o;export{t as __pageData};
