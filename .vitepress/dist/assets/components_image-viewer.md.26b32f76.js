import{o as t,c as a,a as n}from"./app.4ba3de9e.js";const s='{"title":"ImageViewer 이미지 미리보기 컴포넌트","description":"","frontmatter":{},"headers":[{"level":2,"title":"사용법","slug":"사용법"},{"level":2,"title":"createImageViewer","slug":"createimageviewer"},{"level":3,"title":"파라 미터","slug":"파라-미터"}],"relativePath":"components/image-viewer.md","lastUpdated":1722835573428}',e={},p=n('<h1 id="imageviewer-이미지-미리보기-컴포넌트"><a class="header-anchor" href="#imageviewer-이미지-미리보기-컴포넌트" aria-hidden="true">#</a> ImageViewer 이미지 미리보기 컴포넌트</h1><p><code>element-plus</code>의 <code>ImageViewer</code> 컴포넌트를 함수형으로 변환하여, 함수를 통해 컴포넌트를 쉽게 생성할 수 있도록 합니다.</p><p>ImageViewer 컴포넌트 : <a href="https://github.com/web2-solution/web2-vue-framework/tree/demo/src/components/ImageViewer" target="_blank" rel="noopener noreferrer">src/components/ImageViewer</a></p><h2 id="사용법"><a class="header-anchor" href="#사용법" aria-hidden="true">#</a> 사용법</h2><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createImageViewer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/components/ImageViewer&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ElButton <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">open</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token function">createImageViewer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    urlList<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token string">&#39;https://test.jpg&#39;</span><span class="token punctuation">,</span>\n      <span class="token string">&#39;https://test2.jpg&#39;</span><span class="token punctuation">,</span>\n      <span class="token string">&#39;https://test3.jpg&#39;</span><span class="token punctuation">,</span>\n      <span class="token string">&#39;https://test4.jpg&#39;</span><span class="token punctuation">,</span>\n      <span class="token string">&#39;https://test5.jpg&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ElButton</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>open<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>미리 보기<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ElButton</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre></div><h2 id="createimageviewer"><a class="header-anchor" href="#createimageviewer" aria-hidden="true">#</a> createImageViewer</h2><h3 id="파라-미터"><a class="header-anchor" href="#파라-미터" aria-hidden="true">#</a> 파라 미터</h3><table><thead><tr><th>속성</th><th>설명</th><th>타입</th><th>선택 가능 값</th><th>기본값</th></tr></thead><tbody><tr><td>urlList</td><td>사진 목록</td><td><code>string[]</code></td><td>-</td><td>-</td></tr><tr><td>zIndex</td><td>요소 레벨</td><td><code>number</code></td><td>-</td><td>-</td></tr><tr><td>initialIndex</td><td>기본적으로 몇 번째 이미지를 표시할지 설정</td><td><code>number</code></td><td>-</td><td>1</td></tr><tr><td>infinite</td><td>반복 전환이 가능한지 여부</td><td><code>boolean</code></td><td>-</td><td>true</td></tr><tr><td>hideOnClickModal</td><td>클릭할 때 닫히는지 여부</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>appendToBody</td><td>body에 추가할지 여부</td><td><code>boolean</code></td><td>-</td><td>false</td></tr><tr><td>show</td><td>미리보기 표시 여부</td><td><code>boolean</code></td><td>-</td><td>false</td></tr></tbody></table>',8);e.render=function(n,s,e,o,c,l){return t(),a("div",null,[p])};export default e;export{s as __pageData};
