import{_ as n,f as s,k as a,N as t}from"./plugin-vue_export-helper.e5331ba5.js";const m='{"title":"\uAD8C\uD55C","description":"","frontmatter":{},"headers":[{"level":2,"title":"\uBC31\uC5D4\uB4DC\uC5D0\uC11C \uB3D9\uC801\uC73C\uB85C \uAC00\uC838\uC624\uAE30","slug":"\uBC31\uC5D4\uB4DC\uC5D0\uC11C-\uB3D9\uC801\uC73C\uB85C-\uAC00\uC838\uC624\uAE30"},{"level":2,"title":"\uAD6C\uD604","slug":"\uAD6C\uD604"},{"level":2,"title":"\uC815\uC801 \uB77C\uC6B0\uD2B8 (\uAD8C\uD55C\uC744 \uC0AC\uC6A9\uD558\uC9C0 \uC54A\uB294 \uACBD\uC6B0)","slug":"\uC815\uC801-\uB77C\uC6B0\uD2B8-\uAD8C\uD55C\uC744-\uC0AC\uC6A9\uD558\uC9C0-\uC54A\uB294-\uACBD\uC6B0"}],"relativePath":"guide/auth.md","lastUpdated":1743147353242}',p={},o=t(`<h1 id="\uAD8C\uD55C"><a class="header-anchor" href="#\uAD8C\uD55C" aria-hidden="true">#</a> \uAD8C\uD55C</h1><p>\uD504\uB85C\uC81D\uD2B8\uC5D0\uB294 \uBC31\uC5D4\uB4DC\uB97C \uD1B5\uD55C \uAD8C\uD55C \uCC98\uB9AC \uBC29\uC2DD\uC744 \uC0AC\uC6A9\uD569\uB2C8\uB2E4. \uC989, \uC11C\uBC84\uC5D0\uC11C \uBC18\uD658\uB41C \uB77C\uC6B0\uD305 \uB370\uC774\uD130 \uAD6C\uC870\uB97C \uD1B5\uD574 \uB3D9\uC801\uC73C\uB85C \uB77C\uC6B0\uD305 \uD14C\uC774\uBE14\uC744 \uC0DD\uC131\uD569\uB2C8\uB2E4.</p><h2 id="\uBC31\uC5D4\uB4DC\uC5D0\uC11C-\uB3D9\uC801\uC73C\uB85C-\uAC00\uC838\uC624\uAE30"><a class="header-anchor" href="#\uBC31\uC5D4\uB4DC\uC5D0\uC11C-\uB3D9\uC801\uC73C\uB85C-\uAC00\uC838\uC624\uAE30" aria-hidden="true">#</a> \uBC31\uC5D4\uB4DC\uC5D0\uC11C \uB3D9\uC801\uC73C\uB85C \uAC00\uC838\uC624\uAE30</h2><p><strong>\uAD6C\uD604 \uC6D0\uB9AC\uFF1A</strong> \uC778\uD130\uD398\uC774\uC2A4\uB97C \uD1B5\uD574 \uB3D9\uC801\uC73C\uB85C \uB77C\uC6B0\uD2B8 \uD14C\uC774\uBE14\uC744 \uC0DD\uC131\uD558\uACE0, \uC77C\uC815\uD55C \uB370\uC774\uD130 \uAD6C\uC870\uB97C \uB530\uB77C \uBC18\uD658\uD569\uB2C8\uB2E4. \uD504\uB860\uD2B8\uC5D4\uB4DC\uB294 \uC774 \uB370\uC774\uD130\uB97C \uD544\uC694\uC5D0 \uB530\uB77C \uCC98\uB9AC\uD558\uC5EC \uC778\uC2DD \uAC00\uB2A5\uD55C \uAD6C\uC870\uB85C \uBCC0\uD658\uD55C \uD6C4, <code>router.addRoutes</code>\uB97C \uD1B5\uD574 \uB77C\uC6B0\uD2B8 \uC778\uC2A4\uD134\uC2A4\uC5D0 \uCD94\uAC00\uD558\uC5EC \uAD8C\uD55C\uC744 \uB3D9\uC801\uC73C\uB85C \uC0DD\uC131\uD569\uB2C8\uB2E4.</p><p><strong>\uC7A5\uC810\uFF1A</strong> \uBAA8\uB4E0 \uBA54\uB274 \uBC0F \uAD8C\uD55C \uC81C\uC5B4\uB294 \uC11C\uBC84 \uC778\uD130\uD398\uC774\uC2A4\uB97C \uD1B5\uD574 \uAD00\uB9AC\uB418\uBA70, \uD504\uB860\uD2B8\uC5D4\uB4DC\uB294 \uC804\uB2EC\uBC1B\uC740 \uB370\uC774\uD130\uB97C \uB80C\uB354\uB9C1\uD558\uB294 \uB370 \uC9D1\uC911\uD569\uB2C8\uB2E4. \uC774\uCC98\uB7FC \uCC45\uC784\uC774 \uBA85\uD655\uD788 \uBD84\uB9AC\uB41C \uAD6C\uC870\uB294 \uC720\uC9C0 \uBCF4\uC218 \uBD80\uB2F4\uC744 \uC904\uC774\uB294 \uB370 \uD6A8\uACFC\uC801\uC774\uBA70, \uAD8C\uD55C \uAD00\uB9AC \uBC29\uC2DD\uC73C\uB85C \uC801\uD569\uD569\uB2C8\uB2E4.</p><h2 id="\uAD6C\uD604"><a class="header-anchor" href="#\uAD6C\uD604" aria-hidden="true">#</a> \uAD6C\uD604</h2><ol><li><a href="https://github.com/web2-solution/web2-vue-framework/blob/main/src/store/modules/permission.ts" target="_blank" rel="noopener noreferrer">src/store/modules/permission.ts</a>\uC5D0\uC11C <code>generateRoutes()</code>\uB97C \uC218\uC815\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</li></ol><div class="language-ts"><pre><code><span class="token function">generateRoutes</span><span class="token punctuation">(</span>
  type<span class="token operator">:</span> <span class="token string">&#39;server&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;frontEnd&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;static&#39;</span><span class="token punctuation">,</span>
  routers<span class="token operator">?</span><span class="token operator">:</span> AppCustomRouteRecordRaw<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> routerMap<span class="token operator">:</span> AppRouteRecordRaw<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;server&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      routerMap <span class="token operator">=</span> <span class="token function">generateRoutesByServer</span><span class="token punctuation">(</span>routers <span class="token keyword">as</span> AppCustomRouteRecordRaw<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;frontEnd&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      routerMap <span class="token operator">=</span> <span class="token function">generateRoutesByFrontEnd</span><span class="token punctuation">(</span><span class="token function">cloneDeep</span><span class="token punctuation">(</span>asyncRouterMap<span class="token punctuation">)</span><span class="token punctuation">,</span> routers <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      routerMap <span class="token operator">=</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>asyncRouterMap<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>addRouters <span class="token operator">=</span> routerMap<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        path<span class="token operator">:</span> <span class="token string">&#39;/:path(.*)*&#39;</span><span class="token punctuation">,</span>
        redirect<span class="token operator">:</span> <span class="token string">&#39;/404&#39;</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">&#39;404Page&#39;</span><span class="token punctuation">,</span>
        meta<span class="token operator">:</span> <span class="token punctuation">{</span>
          hidden<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          breadcrumb<span class="token operator">:</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>routers <span class="token operator">=</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>constantRouterMap<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>routerMap<span class="token punctuation">)</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><ol start="2"><li><a href="https://github.com/web2-solution/web2-vue-framework/blob/main/src/utils/routerHelper.ts" target="_blank" rel="noopener noreferrer">src/utils/routerHelper.ts</a>\uC5D0\uC11C <code>generateRoutesByServer()</code>\uB97C \uC218\uC815\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</li></ol><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> generateRoutesByServer <span class="token operator">=</span> <span class="token punctuation">(</span>routes<span class="token operator">:</span> AppCustomRouteRecordRaw<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> AppRouteRecordRaw<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res<span class="token operator">:</span> AppRouteRecordRaw<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> route <span class="token keyword">of</span> routes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> data<span class="token operator">:</span> AppRouteRecordRaw <span class="token operator">=</span> <span class="token punctuation">{</span>
      path<span class="token operator">:</span> route<span class="token punctuation">.</span>path<span class="token punctuation">,</span>
      name<span class="token operator">:</span> route<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
      redirect<span class="token operator">:</span> route<span class="token punctuation">.</span>redirect<span class="token punctuation">,</span>
      meta<span class="token operator">:</span> route<span class="token punctuation">.</span>meta<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>route<span class="token punctuation">.</span>component<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> comModule <span class="token operator">=</span>
        modules<span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">../</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>route<span class="token punctuation">.</span>component<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.vue</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span> <span class="token operator">||</span> modules<span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">../</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>route<span class="token punctuation">.</span>component<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.tsx</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span>
      <span class="token keyword">const</span> component <span class="token operator">=</span> route<span class="token punctuation">.</span>component <span class="token keyword">as</span> <span class="token builtin">string</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>comModule <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>component<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>route<span class="token punctuation">.</span>component<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.vue \uD30C\uC77C \uB610\uB294 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>route<span class="token punctuation">.</span>component<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.tsx \uD30C\uC77C\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. \uD30C\uC77C\uC744 \uC0DD\uC131\uD574 \uC8FC\uC138\uC694.</span><span class="token template-punctuation string">\`</span></span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \uB77C\uC6B0\uD2B8 \uD30C\uC77C\uC744 \uB3D9\uC801\uC73C\uB85C \uB85C\uB4DC\uD560 \uC218 \uC788\uC73C\uBA70, \uC0C1\uD669\uC5D0 \uB530\uB77C \uB9DE\uCDA4 \uB85C\uC9C1\uC744 \uC801\uC6A9\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4</span>
        data<span class="token punctuation">.</span>component <span class="token operator">=</span>
          component <span class="token operator">===</span> <span class="token string">&#39;#&#39;</span> <span class="token operator">?</span> Layout <span class="token operator">:</span> component<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;##&#39;</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">getParentLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> comModule<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>route<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      data<span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token function">generateRoutesByServer</span><span class="token punctuation">(</span>route<span class="token punctuation">.</span>children<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>data <span class="token keyword">as</span> AppRouteRecordRaw<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre></div><ol start="3"><li><a href="https://github.com/web2-solution/web2-vue-framework/blob/main/src/views/Login/components/LoginForm.vue" target="_blank" rel="noopener noreferrer">src/views/Login/components/LoginForm.vue</a>\uC5D0\uC11C <code>getRole()</code>\uC744 \uC218\uC815\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</li></ol><div class="language-ts"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">getRole</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token generic-function"><span class="token function">getFormData</span><span class="token generic class-name"><span class="token operator">&lt;</span>UserType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> params <span class="token operator">=</span> <span class="token punctuation">{</span>
    roleName<span class="token operator">:</span> formData<span class="token punctuation">.</span>username
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span>
    appStore<span class="token punctuation">.</span>getDynamicRouter <span class="token operator">&amp;&amp;</span> appStore<span class="token punctuation">.</span>getServerDynamicRouter
      <span class="token operator">?</span> <span class="token keyword">await</span> <span class="token function">getAdminRoleApi</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span>
      <span class="token operator">:</span> <span class="token keyword">await</span> <span class="token function">getTestRoleApi</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> routers <span class="token operator">=</span> res<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token function">setStorage</span><span class="token punctuation">(</span><span class="token string">&#39;roleRouters&#39;</span><span class="token punctuation">,</span> routers<span class="token punctuation">)</span>
    <span class="token keyword">await</span> permissionStore<span class="token punctuation">.</span><span class="token function">generateRoutes</span><span class="token punctuation">(</span>
      appStore<span class="token punctuation">.</span>getServerDynamicRouter <span class="token operator">?</span> <span class="token string">&#39;server&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;frontEnd&#39;</span><span class="token punctuation">,</span>
      routers
    <span class="token punctuation">)</span>
    permissionStore<span class="token punctuation">.</span>getAddRouters<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">addRoute</span><span class="token punctuation">(</span>route <span class="token keyword">as</span> RouteRecordRaw<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    permissionStore<span class="token punctuation">.</span><span class="token function">setIsAddRouters</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> redirect<span class="token punctuation">.</span>value <span class="token operator">||</span> permissionStore<span class="token punctuation">.</span>addRouters<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>path <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><ol start="4"><li>\uC0C8\uB85C\uACE0\uCE68 \uC2DC \uB3D9\uC801 \uB77C\uC6B0\uD2B8 \uC720\uC9C0</li></ol><p>\uC0AC\uC6A9\uC790\uAC00 \uD398\uC774\uC9C0\uB97C \uC0C8\uB85C\uACE0\uCE68\uD558\uBA74 \uBE0C\uB77C\uC6B0\uC800 \uBA54\uBAA8\uB9AC\uC5D0 \uC800\uC7A5\uB41C \uC0C1\uD0DC\uB294 \uCD08\uAE30\uD654\uB429\uB2C8\uB2E4. \uC774\uB85C \uC778\uD574 \uB85C\uADF8\uC778 \uC0C1\uD0DC\uB098 \uB77C\uC6B0\uD305 \uC815\uBCF4\uAC00 \uC0AC\uB77C\uC9C8 \uC218 \uC788\uC73C\uBBC0\uB85C, \uC774\uB97C \uBC29\uC9C0\uD558\uAE30 \uC704\uD574 <code>roleRouters</code> \uC815\uBCF4\uB97C \uB85C\uCEEC \uC2A4\uD1A0\uB9AC\uC9C0\uC5D0 \uCE90\uC2F1\uD574\uB450\uACE0 \uB2E4\uC2DC \uBD88\uB7EC\uC624\uB294 \uBC29\uC2DD\uC73C\uB85C \uB3D9\uC801 \uB77C\uC6B0\uD2B8\uB97C \uBCF5\uC6D0\uD569\uB2C8\uB2E4.</p><p><a href="https://github.com/web2-solution/web2-vue-framework/blob/main/src/permission.ts" target="_blank" rel="noopener noreferrer">src/permission.ts</a>\uC5D0\uC11C\uB294 \uC544\uB798\uC640 \uAC19\uC774 <code>userStore.getUserInfo</code>\uAC00 \uC5C6\uC744 \uACBD\uC6B0, <code>permissionStore.getRouters</code>\uC758 \uC0C1\uD0DC\uC640 <code>NO_REDIRECT_WHITE_LIST</code>\uB97C \uD1B5\uD574 \uC608\uC678 \uCC98\uB9AC\uB97C \uC218\uD589\uD558\uBA70, \uB098\uBA38\uC9C0 \uACBD\uC6B0\uC5D0\uB294 <code>login?redirect=\${to.path}</code>\uC73C\uB85C \uC720\uB3C4\uD569\uB2C8\uB2E4.</p><p>\uB77C\uC6B0\uD2B8 \uBCF5\uC6D0\uC740 \uB85C\uADF8\uC778 \uC131\uACF5 \uC774\uD6C4 <code>permissionStore.generateRoutes(...)</code> \uD638\uCD9C \uC2DC \uB2E4\uC2DC \uC218\uD589\uB418\uBA70, \uCE90\uC2F1\uB41C <code>roleRouters</code>\uB97C \uBD88\uB7EC\uC640 \uD65C\uC6A9\uD569\uB2C8\uB2E4.</p><div class="language-ts"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span>userStore<span class="token punctuation">.</span>getUserInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>permissionStore<span class="token punctuation">.</span>getIsAddRouters<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// Developers can modify it according to the actual situation</span>
      <span class="token keyword">const</span> roleRouters <span class="token operator">=</span> userStore<span class="token punctuation">.</span>getRoleRouters <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

      <span class="token comment">// Whether to use dynamic routing</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>appStore<span class="token punctuation">.</span>getDynamicRouter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        appStore<span class="token punctuation">.</span>serverDynamicRouter
          <span class="token operator">?</span> <span class="token keyword">await</span> permissionStore<span class="token punctuation">.</span><span class="token function">generateRoutes</span><span class="token punctuation">(</span><span class="token string">&#39;server&#39;</span><span class="token punctuation">,</span> roleRouters <span class="token keyword">as</span> AppCustomRouteRecordRaw<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
          <span class="token operator">:</span> <span class="token keyword">await</span> permissionStore<span class="token punctuation">.</span><span class="token function">generateRoutes</span><span class="token punctuation">(</span><span class="token string">&#39;frontEnd&#39;</span><span class="token punctuation">,</span> roleRouters <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">await</span> permissionStore<span class="token punctuation">.</span><span class="token function">generateRoutes</span><span class="token punctuation">(</span><span class="token string">&#39;static&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      permissionStore<span class="token punctuation">.</span>getAddRouters<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        router<span class="token punctuation">.</span><span class="token function">addRoute</span><span class="token punctuation">(</span>route <span class="token keyword">as</span> <span class="token builtin">unknown</span> <span class="token keyword">as</span> RouteRecordRaw<span class="token punctuation">)</span> <span class="token comment">// Dynamic adding accessable routing table</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> redirectPath <span class="token operator">=</span> from<span class="token punctuation">.</span>query<span class="token punctuation">.</span>redirect <span class="token operator">||</span> to<span class="token punctuation">.</span>path
      <span class="token keyword">const</span> redirect <span class="token operator">=</span> <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>redirectPath <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> nextData <span class="token operator">=</span> to<span class="token punctuation">.</span>path <span class="token operator">===</span> redirect <span class="token operator">?</span> <span class="token punctuation">{</span> <span class="token operator">...</span>to<span class="token punctuation">,</span> replace<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token operator">:</span> <span class="token punctuation">{</span> path<span class="token operator">:</span> redirect <span class="token punctuation">}</span>
      permissionStore<span class="token punctuation">.</span><span class="token function">setIsAddRouters</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
      <span class="token function">next</span><span class="token punctuation">(</span>nextData<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">&amp;&amp;</span> permissionStore<span class="token punctuation">.</span>getRouters<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">NO_REDIRECT_WHITE_LIST</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/login?redirect=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>to<span class="token punctuation">.</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token comment">// Otherwise, all redirect to the login page</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre></div><h2 id="\uC815\uC801-\uB77C\uC6B0\uD2B8-\uAD8C\uD55C\uC744-\uC0AC\uC6A9\uD558\uC9C0-\uC54A\uB294-\uACBD\uC6B0"><a class="header-anchor" href="#\uC815\uC801-\uB77C\uC6B0\uD2B8-\uAD8C\uD55C\uC744-\uC0AC\uC6A9\uD558\uC9C0-\uC54A\uB294-\uACBD\uC6B0" aria-hidden="true">#</a> \uC815\uC801 \uB77C\uC6B0\uD2B8 (\uAD8C\uD55C\uC744 \uC0AC\uC6A9\uD558\uC9C0 \uC54A\uB294 \uACBD\uC6B0)</h2><p>\uB3D9\uC801 \uB77C\uC6B0\uD2B8\uAC00 \uD544\uC694\uD558\uC9C0 \uC54A\uC740 \uACBD\uC6B0, <code>src/config/app.ts</code>\uC5D0\uC11C <code>dynamicRouter</code>\uB97C <code>false</code>\uB85C \uC124\uC815\uD558\uBA74 \uD504\uB85C\uC81D\uD2B8 \uB0B4\uC758 \uC815\uC801 \uB77C\uC6B0\uD2B8 \uD14C\uC774\uBE14\uB9CC\uC744 \uC0AC\uC6A9\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p>`,19),e=[o];function c(u,l,r,k,i,d){return a(),s("div",null,e)}var w=n(p,[["render",c]]);export{m as __pageData,w as default};
